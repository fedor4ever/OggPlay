/*
* ============================================================================
*  Name     : CSplashContainer from CSplashContainer.h
*  Part of  : Splash
*  Created  : 17/02/2003 by Eric@NewLC
*  Implementation notes:
*     Initial content was generated by Series 60 AppWizard.
*  Version  :
*  Copyright: 
* ============================================================================
*/

// Platform settings
#include <OggOs.h>

// This file is for Series 60 only
#if defined(SERIES60)

#include <eikdef.h>
#include <eikenv.h>
#include "OggSplashContainer.h"
#include "OggPlay.h"

// ================= MEMBER FUNCTIONS =======================
// ---------------------------------------------------------
// CSplashContainer::ConstructL(const TRect& aRect)
// EPOC two phased constructor
// ---------------------------------------------------------
//
void CSplashContainer::ConstructL(const TRect& aRect, const TVwsViewId& aPrevViewId)
{
  //  if (aPrevViewId <KOggPlayApplicationUidValue )
    iPrevViewId = aPrevViewId;
    //
    // Create and activate the main window
    //
    CreateWindowL();
    // The splash takes all space available, 
    SetRect(aRect);
    ActivateL();

  // Show the splash screen for 3 seconds.
    iDisplayTimer = new (ELeave) COggTimer(
    TCallBack( TimerExpired ,this ) );
    iDisplayTimer->Wait(TInt(3E6));
}

// Destructor
CSplashContainer::~CSplashContainer()
{
    delete (iDisplayTimer);
}

// ---------------------------------------------------------
// CSplashContainer::CountComponentControls() const
// ---------------------------------------------------------
//
TInt CSplashContainer::CountComponentControls() const
    {
    return 0; // return nbr of controls inside this container
    }

// ---------------------------------------------------------
// CSplashContainer::ComponentControl(TInt aIndex) const
// ---------------------------------------------------------
//
CCoeControl* CSplashContainer::ComponentControl(TInt /*aIndex*/) const
    {

    return NULL;

    }

// ---------------------------------------------------------
// CSplashContainer::DrawSplash(const TRect& aRect) const
// Equivalent of the CCoeControl Draw function while in Splash
// mode (i.e. until a call to SetState(<new mode>))
// ---------------------------------------------------------
//
void CSplashContainer::Draw(const TRect& /*aRect*/) const
{
	TRAPD(neverMind, DrawL());
}

void CSplashContainer::DrawL() const
{
  // Check if there is a splash mbm available, if not splash() will make a silent leave
  TFileName fileName(CEikonEnv::Static()->EikAppUi()->Application()->AppFullName());
  TParsePtr parse(fileName);

#if defined(SERIES60V3)
  TFileName privatePath;
  User::LeaveIfError(iCoeEnv->FsSession().PrivatePath(privatePath));

  fileName.Copy(parse.Drive());
  fileName.Append(privatePath);
  fileName.Append(_L("import\\s60splash.mbm"));
#else
  fileName.Copy(parse.DriveAndPath());
  fileName.Append(_L("s60splash.mbm"));
#endif
	  
  CFbsBitmap* bitmap = new (ELeave) CFbsBitmap;
  CleanupStack::PushL(bitmap);
  User::LeaveIfError(bitmap->Load(fileName, 0, EFalse));
  
  CWindowGc& gc = SystemGc();
  TRect bitmapRect = TRect(bitmap->SizeInPixels());
  TRect screenRect = TRect(CCoeEnv::Static()->ScreenDevice()->SizeInPixels());
  if (bitmapRect == screenRect)
	gc.BitBlt(TPoint(0, 0), bitmap);
  else
	gc.DrawBitmap(screenRect, bitmap, bitmapRect);

  CleanupStack::PopAndDestroy(bitmap);  
}

TInt CSplashContainer::TimerExpired(TAny* aPtr)
{
  CSplashContainer* self= ( CSplashContainer*) aPtr;
  COggPlayAppUi* appUi = (COggPlayAppUi*) CEikonEnv::Static()->AppUi();
  TUid prevViewUid = self->iPrevViewId.iViewUid;
  TUid notAnOggPlayView = {0x1}; // I'm not sure if it's 0x1 all the time. At least in SDK 2.0
  if ( prevViewUid != notAnOggPlayView)
     appUi->ActivateOggViewL(prevViewUid);
  else
     appUi->ActivateOggViewL();
  return 0;
}

#endif /* SERIES60 */
